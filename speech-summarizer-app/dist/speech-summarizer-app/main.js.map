{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/speech/services/speech.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validator, Validators} from \"@angular/forms\";\nimport {SpeechService} from \"./speech/services/speech.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'speech-summarizer-app';\n\n  form = new FormGroup({\n    file: new FormControl('', Validators.required),\n    sentences: new FormControl(1),\n    areas: new FormControl(''),\n  });\n\n\n  constructor(private speechService: SpeechService) {\n  }\n\n  startRecognition() {\n    console.log(this.form.value);\n    this.speechService.recognize(this.form.value).subscribe(data => {\n      console.log(data);\n    })\n\n  }\n\n  onSelect(event: Event) {\n    const file = (event.target as any).files[0];\n    this.form.patchValue({file: file});\n\n\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-8 offset-md-2\">\n      <div class=\"summarize\">\n        <h1 class=\"justify-content-center d-flex\">Meeting Summarizer</h1>\n\n        <form [formGroup]=\"form\" (ngSubmit)=\"startRecognition()\">\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Your file</label>\n            <input type=\"file\" class=\"form-control\" id=\"exampleInputEmail1\"\n                   (change)=\"onSelect($event)\">\n            <small id=\"emailHelp\" class=\"form-text text-muted\">.wav, .mp4</small>\n          </div>\n          <div class=\"form-group mt-3\">\n            <label for=\"exampleInputEmail1\">Number of sentences</label>\n            <input type=\"number\" class=\"form-control\" value=\"1\" formControlName=\"sentences\">\n          </div>\n          <div class=\"form-group mt-3\">\n            <label for=\"exampleInputEmail1\">Areas of interest</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"areas\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary mt-3\" [disabled]=\"form.invalid\">Summarize!</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"ellipse\"></div>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpeechService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  recognize(data: any): Observable<any> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n\n    return this.http.post('./summarize-audio', {});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}