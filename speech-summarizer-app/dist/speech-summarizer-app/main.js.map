{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AACuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;ACN8B;;;AAO/C,MAAM,YAAY;IAQvB;QAPA,UAAK,GAAG,uBAAuB,CAAC;QAEhC,SAAI,GAAG,IAAI,qDAAS,CAAC;YACnB,IAAI,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;SAC1B,CAAC,CAAC;IAIH,CAAC;IAED,gBAAgB;IAEhB,CAAC;;wEAbU,YAAY;0GAAZ,YAAY;QCRzB,yEAAuB;QAI2B,6EAAkB;QAAA,4DAAK;QAEjE,0EAAyB;QAGa,qEAAS;QAAA,4DAAQ;QACjD,uEAAgE;QAChE,4EAAmD;QAAA,sEAAU;QAAA,4DAAQ;QAEvE,2EAA6B;QACK,+EAAmB;QAAA,4DAAQ;QAC3D,wEAAwC;QAC1C,4DAAM;QACN,2EAA6B;QACK,6EAAiB;QAAA,4DAAQ;QACzD,wEAAwC;QAC1C,4DAAM;QACN,8EAAmD;QAAA,sEAAU;QAAA,4DAAS;QAWlF,sEAEM;;QA5BQ,0DAAkB;QAAlB,+EAAkB;;;;;;;;;;;;;;;;;;;;;ACL0B;AAEF;AACT;AACI;;AAc5C,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YALF;YACL,oEAAa;YACb,iEAAgB;YAChB,+DAAmB;SACtB;mIAIQ,SAAS,mBAVlB,wDAAY,aAGR,oEAAa;QACb,iEAAgB;QAChB,+DAAmB;;;;;;;;;;;;;;;ACd3B,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'speech-summarizer-app';\n\n  form = new FormGroup({\n    file: new FormControl('')\n  });\n\n\n  constructor() {\n  }\n\n  startRecognition() {\n\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-8 offset-md-2\">\n      <div class=\"summarize\">\n        <h1 class=\"justify-content-center d-flex\">Meeting Summarizer</h1>\n\n        <form [formGroup]=\"form\">\n          <form>\n            <div class=\"form-group\">\n              <label for=\"exampleInputEmail1\">Your file</label>\n              <input type=\"file\" class=\"form-control\" id=\"exampleInputEmail1\">\n              <small id=\"emailHelp\" class=\"form-text text-muted\">.wav, .mp3</small>\n            </div>\n            <div class=\"form-group mt-3\">\n              <label for=\"exampleInputEmail1\">Number of sentences</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group mt-3\">\n              <label for=\"exampleInputEmail1\">Areas of interest</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary mt-3\">Summarize!</button>\n          </form>\n\n        </form>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n\n<div class=\"ellipse\">\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        ReactiveFormsModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}